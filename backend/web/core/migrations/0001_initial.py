# Generated by Django 4.2.7 on 2024-05-15 08:16

import core.utils.file
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('text', models.TextField(blank=True, max_length=80000, null=True, verbose_name='текст')),
                ('year', models.IntegerField(blank=True, null=True, verbose_name='год рождения')),
                ('text_preview', models.TextField(blank=True, max_length=3000, null=True, verbose_name='текст_превью')),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='ссылка')),
                ('slug2', models.CharField(blank=True, max_length=255, null=True, verbose_name='слаг автора')),
                ('slug3', models.CharField(blank=True, max_length=255, null=True, verbose_name='имя автора произведения')),
                ('type', models.CharField(choices=[['music', 'Музыкант'], ['writer', 'Литератор'], ['artist', 'Художник'], ['philosopher', 'Философ'], ['lector', 'Лектор'], ['director', 'Режиссер'], ['spiritual', 'Духоносный']], max_length=255, null=True, verbose_name='тип')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('antagonist', models.ManyToManyField(blank=True, to='core.author')),
                ('associate', models.ManyToManyField(blank=True, to='core.author')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('is_primary', models.BooleanField(default=False)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='image')),
                ('about_text', models.TextField(blank=True, max_length=300, null=True, verbose_name='about')),
                ('slug', models.CharField(choices=[['music', 'Музыкант'], ['writer', 'Литератор'], ['artist', 'Художник'], ['philosopher', 'Философ'], ['lector', 'Лектор'], ['director', 'Режиссер'], ['spiritual', 'Духоносный']], max_length=300, null=True)),
                ('website', models.URLField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Century',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(default=0, help_text='значение', unique=True, verbose_name='Век')),
                ('text', models.TextField(blank=True, null=True, verbose_name='описание века')),
                ('display_name', models.CharField(help_text='отображаемое значение', max_length=255, verbose_name='Век')),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='ссылка')),
            ],
            options={
                'verbose_name_plural': 'века',
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='Singer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='ссылка')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Текст произведения')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='core.author', verbose_name='Автор')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('about_text', models.TextField(blank=True, max_length=3000, null=True, verbose_name='about')),
                ('slug', models.CharField(max_length=300, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='core.category')),
            ],
            options={
                'verbose_name_plural': 'Cубкатегории',
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('duration', models.DurationField(blank=True, max_length=255, null=True, verbose_name='Длительность')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Текст произведения')),
                ('file', models.FileField(blank=True, null=True, upload_to=core.utils.file.get_song_filepath, verbose_name='Файл')),
                ('analysis', models.FileField(blank=True, null=True, upload_to=core.utils.file.get_analysis_filepath, verbose_name='Разбор')),
                ('about', models.FileField(blank=True, null=True, upload_to=core.utils.file.get_about_filepath, verbose_name='Рассказ об авторе')),
                ('youtube_link', models.URLField(blank=True, max_length=250, null=True)),
                ('type', models.CharField(choices=[('youtube', 'youtube'), ('internal', 'закаченный файл')], default='youtube', max_length=255, verbose_name='тип')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='core.author', verbose_name='Автор')),
                ('singer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.singer', verbose_name='Исполнитель')),
            ],
        ),
        migrations.CreateModel(
            name='Picture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Текст произведения')),
                ('file', models.FileField(blank=True, null=True, upload_to=core.utils.file.get_song_filepath, verbose_name='Файл')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='core.author', verbose_name='Автор')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='ссылка')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('order', models.IntegerField(blank=True, default=0, null=True)),
                ('text_preview', models.TextField(blank=True, max_length=5000, null=True, verbose_name='текст_превью')),
                ('type', models.CharField(blank=True, choices=[['music', 'Музыкант'], ['writer', 'Литератор'], ['artist', 'Художник'], ['philosopher', 'Философ'], ['lector', 'Лектор'], ['director', 'Режиссер'], ['spiritual', 'Духоносный']], max_length=100, null=True, verbose_name='тип жанра')),
                ('website', models.URLField(blank=True, max_length=250, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='core.genre')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
                ('slug', models.CharField(max_length=255, null=True, unique=True, verbose_name='ссылка')),
                ('website', models.URLField(blank=True, max_length=250, null=True)),
                ('director', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='films', to='core.author')),
                ('genre', models.ManyToManyField(blank=True, related_name='films', to='core.genre')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CenturyDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[['music', 'Музыкант'], ['writer', 'Литератор'], ['artist', 'Художник'], ['philosopher', 'Философ'], ['lector', 'Лектор'], ['director', 'Режиссер'], ['spiritual', 'Духоносный']], max_length=100, null=True, verbose_name='тип жанра')),
                ('text', models.TextField(blank=True, null=True, verbose_name='описание века')),
                ('detailed_text', models.TextField(blank=True, null=True, verbose_name='детальное описание')),
                ('rel_changes_text', models.TextField(blank=True, null=True, verbose_name='религиозные изменения')),
                ('mistake_text', models.TextField(blank=True, null=True, verbose_name='описание ошибок')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.category')),
                ('century', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.century')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='core.author', verbose_name='Автор')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='authors', to='core.category'),
        ),
        migrations.AddField(
            model_name='author',
            name='century',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.century'),
        ),
        migrations.AddField(
            model_name='author',
            name='genre',
            field=models.ManyToManyField(blank=True, related_name='authors', to='core.genre'),
        ),
        migrations.AddField(
            model_name='author',
            name='student',
            field=models.ManyToManyField(blank=True, to='core.author'),
        ),
        migrations.AddField(
            model_name='author',
            name='subcategory',
            field=models.ManyToManyField(blank=True, related_name='authors', to='core.subcategory'),
        ),
        migrations.AddField(
            model_name='author',
            name='teacher',
            field=models.ManyToManyField(blank=True, to='core.author'),
        ),
    ]
